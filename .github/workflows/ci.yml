# Shamelessly stolen from https://github.com/dandavison/delta/blob/master/.github/workflows/ci.yml
# Thanks dandavison!

name: Continuous Integration

env:
  BREWERS_FRIEND_API_KEY: DUMMY_KEY_FOR_TESTS

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  unit_tests:
    name: Unit tests
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job:
          - { os: macos-latest, target: x86_64-apple-darwin, use-cross: false }
          # - {
          #     os: windows-latest,
          #     target: x86_64-pc-windows-msvc,
          #     use-cross: false,
          #   }
          - {
              os: ubuntu-latest,
              target: x86_64-unknown-linux-gnu,
              use-cross: false,
            }
          - {
              os: ubuntu-latest,
              target: i686-unknown-linux-gnu,
              use-cross: true,
            }
          - {
              os: ubuntu-latest,
              target: arm-unknown-linux-gnueabihf,
              use-cross: true,
            }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          profile: minimal
          override: true
      - name: Unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          use-cross: ${{ matrix.job.use-cross }}
          args: --target ${{ matrix.job.target }} --verbose -- --nocapture

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: clippy
      - name: Clippy Check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings


  cppcheck:
    name: cppcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install cppcheck
        run: sudo apt-get install cppcheck
      - name: Run cppcheck
        run: cppcheck --std=c89 --enable=all --error-exitcode=1 --inline-suppr macbrew-ui/

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: "--ignore-tests --out Lcov --output-dir target/tarpaulin"
      - name: Upload to Coveralls
        # upload only if push
        if: ${{ github.event_name == 'push' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "./target/tarpaulin/lcov.info"
